{"pages":[],"posts":[{"title":"Redis全面解析","text":"Redis 全面解析 Redis 全面解析 Redis 基础 简介 介绍 应用场景 线程模型 优劣 优点 缺点 数据结构 基础类型 拓展类型 事务 特点 效率 持久化方式 增量同步/全量同步 Redis 缓存淘汰策略 Redis 分布式锁 Redis 集群 Redis 常见问题 Redis 推荐书籍Redis 基础简介介绍应用场景线程模型优劣优点缺点数据结构基础类型拓展类型事务特点效率持久化方式增量同步/全量同步Redis 缓存淘汰策略Redis 分布式锁Redis 集群Redis 常见问题Redis 推荐书籍","link":"/2021/04/21/Redis%E5%85%A8%E9%9D%A2%E8%A7%A3%E6%9E%90/"},{"title":"面向对象-抽象类和接口","text":"抽象类和接口意义 抽象类，是度成员变量和方法的抽象，表示is-a的关系，解决代码复用问题。 接口，仅仅是方法的抽象，表示has-a的关系，解决代码耦合的问题，隔离接口和具体实现，提高代码扩展性。 语法特性 抽象类，包含成员变量和方法，方法可以包含可以不包含，不包含的是抽象方法，不能被实例化，只能被继承，被继承后一定要实现抽象方法。 接口，不能包含成员变量，只能声明方法，方法不能实现，类实现后一定要实现接口中声明方法。","link":"/2021/04/29/%E9%9D%A2%E5%90%91%E5%AF%B9%E8%B1%A1-%E6%8A%BD%E8%B1%A1%E7%B1%BB%E5%92%8C%E6%8E%A5%E5%8F%A3/"}],"tags":[{"name":"Redis","slug":"Redis","link":"/tags/Redis/"},{"name":"OOP","slug":"OOP","link":"/tags/OOP/"}],"categories":[]}